<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="io.openvidu.server.common.dao.HiddenSpecifyVisibleMapper">
  <resultMap id="BaseResultMap" type="io.openvidu.server.common.pojo.HiddenSpecifyVisible">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="limit_user" jdbcType="VARCHAR" property="limitUser" />
    <result column="visible_user" jdbcType="VARCHAR" property="visibleUser" />
    <result column="type" jdbcType="INTEGER" property="type" />
    <result column="dept_visible" jdbcType="INTEGER" property="deptVisible" />
    <result column="gmt_create" jdbcType="TIMESTAMP" property="gmtCreate" />
    <result column="gmt_update" jdbcType="TIMESTAMP" property="gmtUpdate" />
    <result column="corp_id" jdbcType="BIGINT" property="corpId" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, limit_user, visible_user, `type`, dept_visible, gmt_create, gmt_update, corp_id
  </sql>
  <select id="selectByExample" parameterType="io.openvidu.server.common.pojo.HiddenSpecifyVisibleExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from sd_hidden_specify_visible
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from sd_hidden_specify_visible
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from sd_hidden_specify_visible
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="io.openvidu.server.common.pojo.HiddenSpecifyVisibleExample">
    delete from sd_hidden_specify_visible
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" keyColumn="id" keyProperty="id" parameterType="io.openvidu.server.common.pojo.HiddenSpecifyVisible" useGeneratedKeys="true">
    insert into sd_hidden_specify_visible (limit_user, visible_user, `type`, 
      dept_visible, gmt_create, gmt_update, 
      corp_id)
    values (#{limitUser,jdbcType=VARCHAR}, #{visibleUser,jdbcType=VARCHAR}, #{type,jdbcType=INTEGER}, 
      #{deptVisible,jdbcType=INTEGER}, #{gmtCreate,jdbcType=TIMESTAMP}, #{gmtUpdate,jdbcType=TIMESTAMP}, 
      #{corpId,jdbcType=BIGINT})
  </insert>
  <insert id="insertSelective" keyColumn="id" keyProperty="id" parameterType="io.openvidu.server.common.pojo.HiddenSpecifyVisible" useGeneratedKeys="true">
    insert into sd_hidden_specify_visible
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="limitUser != null">
        limit_user,
      </if>
      <if test="visibleUser != null">
        visible_user,
      </if>
      <if test="type != null">
        `type`,
      </if>
      <if test="deptVisible != null">
        dept_visible,
      </if>
      <if test="gmtCreate != null">
        gmt_create,
      </if>
      <if test="gmtUpdate != null">
        gmt_update,
      </if>
      <if test="corpId != null">
        corp_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="limitUser != null">
        #{limitUser,jdbcType=VARCHAR},
      </if>
      <if test="visibleUser != null">
        #{visibleUser,jdbcType=VARCHAR},
      </if>
      <if test="type != null">
        #{type,jdbcType=INTEGER},
      </if>
      <if test="deptVisible != null">
        #{deptVisible,jdbcType=INTEGER},
      </if>
      <if test="gmtCreate != null">
        #{gmtCreate,jdbcType=TIMESTAMP},
      </if>
      <if test="gmtUpdate != null">
        #{gmtUpdate,jdbcType=TIMESTAMP},
      </if>
      <if test="corpId != null">
        #{corpId,jdbcType=BIGINT},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="io.openvidu.server.common.pojo.HiddenSpecifyVisibleExample" resultType="java.lang.Long">
    select count(*) from sd_hidden_specify_visible
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update sd_hidden_specify_visible
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.limitUser != null">
        limit_user = #{record.limitUser,jdbcType=VARCHAR},
      </if>
      <if test="record.visibleUser != null">
        visible_user = #{record.visibleUser,jdbcType=VARCHAR},
      </if>
      <if test="record.type != null">
        `type` = #{record.type,jdbcType=INTEGER},
      </if>
      <if test="record.deptVisible != null">
        dept_visible = #{record.deptVisible,jdbcType=INTEGER},
      </if>
      <if test="record.gmtCreate != null">
        gmt_create = #{record.gmtCreate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.gmtUpdate != null">
        gmt_update = #{record.gmtUpdate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.corpId != null">
        corp_id = #{record.corpId,jdbcType=BIGINT},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update sd_hidden_specify_visible
    set id = #{record.id,jdbcType=BIGINT},
      limit_user = #{record.limitUser,jdbcType=VARCHAR},
      visible_user = #{record.visibleUser,jdbcType=VARCHAR},
      `type` = #{record.type,jdbcType=INTEGER},
      dept_visible = #{record.deptVisible,jdbcType=INTEGER},
      gmt_create = #{record.gmtCreate,jdbcType=TIMESTAMP},
      gmt_update = #{record.gmtUpdate,jdbcType=TIMESTAMP},
      corp_id = #{record.corpId,jdbcType=BIGINT}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="io.openvidu.server.common.pojo.HiddenSpecifyVisible">
    update sd_hidden_specify_visible
    <set>
      <if test="limitUser != null">
        limit_user = #{limitUser,jdbcType=VARCHAR},
      </if>
      <if test="visibleUser != null">
        visible_user = #{visibleUser,jdbcType=VARCHAR},
      </if>
      <if test="type != null">
        `type` = #{type,jdbcType=INTEGER},
      </if>
      <if test="deptVisible != null">
        dept_visible = #{deptVisible,jdbcType=INTEGER},
      </if>
      <if test="gmtCreate != null">
        gmt_create = #{gmtCreate,jdbcType=TIMESTAMP},
      </if>
      <if test="gmtUpdate != null">
        gmt_update = #{gmtUpdate,jdbcType=TIMESTAMP},
      </if>
      <if test="corpId != null">
        corp_id = #{corpId,jdbcType=BIGINT},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="io.openvidu.server.common.pojo.HiddenSpecifyVisible">
    update sd_hidden_specify_visible
    set limit_user = #{limitUser,jdbcType=VARCHAR},
      visible_user = #{visibleUser,jdbcType=VARCHAR},
      `type` = #{type,jdbcType=INTEGER},
      dept_visible = #{deptVisible,jdbcType=INTEGER},
      gmt_create = #{gmtCreate,jdbcType=TIMESTAMP},
      gmt_update = #{gmtUpdate,jdbcType=TIMESTAMP},
      corp_id = #{corpId,jdbcType=BIGINT}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>