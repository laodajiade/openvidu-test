<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="io.openvidu.server.common.dao.DepartmentMapper" >
  <resultMap id="BaseResultMap" type="io.openvidu.server.common.pojo.Department" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="parent_id" property="parentId" jdbcType="BIGINT" />
    <result column="dept_name" property="deptName" jdbcType="VARCHAR" />
    <result column="corp_id" property="corpId" jdbcType="BIGINT" />
    <result column="project" property="project" jdbcType="VARCHAR" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
  </resultMap>

  <resultMap id="TreeResultMap" type="io.openvidu.server.common.pojo.DepartmentTree" >
    <id column="id" property="orgId" jdbcType="BIGINT" />
    <result column="parent_id" property="parentId" jdbcType="BIGINT" />
    <result column="dept_name" property="organizationName" jdbcType="VARCHAR" />
  </resultMap>

  <sql id="Base_Column_List" >
    id, parent_id, dept_name, corp_id, project, create_time, update_time
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select
    <include refid="Base_Column_List" />
    from sd_department
    where id = #{id,jdbcType=BIGINT}
  </select>

  <select id="selectByCorpId" parameterType="java.lang.Long" resultMap="TreeResultMap">
    select id, parent_id, dept_name
    from sd_department
    where corp_id = #{corpId,jdbcType=BIGINT}
    rder by sort_number asc
  </select>

  <select id="selectRootDept" parameterType="java.lang.String" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from sd_department
    where project = #{project,jdbcType=VARCHAR}
    and parent_id is null
  </select>

  <select id="selectRootDeptByUuid" resultType="io.openvidu.server.common.pojo.Department" parameterType="java.lang.String" >
    select d.id,d.dept_name deptName,d.parent_id parentId,d.corp_id corpId
    from sd_user_dept sud
    left join sd_user su on sud.user_id = su.id
    left join sd_department d on sud.dept_id = d.id
    where su.uuid = #{uuid,jdbcType=VARCHAR}
    limit 1
  </select>

  <select id="selectChildDept" parameterType="java.lang.Object" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from sd_department
    where project = #{project,jdbcType=VARCHAR}
    and parent_id = #{parentId,jdbcType=BIGINT}
    order by sort_number asc, id asc
  </select>

  <select id="selectByParentIds" parameterType="java.util.List" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from sd_department
    where parent_id in
    <foreach collection="list" index="index" item="item" separator="," open="(" close=")">
      #{item,jdbcType=BIGINT}
    </foreach>
  </select>

  <select id="getRootDept" parameterType="java.util.List" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from sd_department
    where project = #{project} and parent_id is null
  </select>

  <select id="getSubFirstLevelDepts" parameterType="java.lang.Long" resultMap="BaseResultMap">
      select id, parent_id, dept_name
      from  sd_department
      where parent_id = #{parentId,jdbcType=BIGINT}
  </select>
  <select id=" getDepts" parameterType="java.lang.Long" resultMap="BaseResultMap">
      select id, parent_id, dept_name
      from  sd_department
      where parent_id = #{parentId,jdbcType=BIGINT}
  </select>

  <!-- 查询部门信息 -->
  <select id="selectByParentId" parameterType="java.lang.Long" resultMap="BaseResultMap">
      select id, parent_id, dept_name
      from  sd_department
      where parent_id = #{parentId,jdbcType=BIGINT}
  </select>

  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from sd_department
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="io.openvidu.server.common.pojo.Department" >
    insert into sd_department (id, parent_id, dept_name,
      corp_id, project, create_time,
      update_time)
    values (#{id,jdbcType=BIGINT}, #{parentId,jdbcType=BIGINT}, #{deptName,jdbcType=VARCHAR},
      #{corpId,jdbcType=BIGINT}, #{project,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP},
      #{updateTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="io.openvidu.server.common.pojo.Department" >
    insert into sd_department
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="parentId != null" >
        parent_id,
      </if>
      <if test="deptName != null" >
        dept_name,
      </if>
      <if test="corpId != null" >
        corp_id,
      </if>
      <if test="project != null" >
        project,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="updateTime != null" >
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=BIGINT},
      </if>
      <if test="parentId != null" >
        #{parentId,jdbcType=BIGINT},
      </if>
      <if test="deptName != null" >
        #{deptName,jdbcType=VARCHAR},
      </if>
      <if test="corpId != null" >
        #{corpId,jdbcType=BIGINT},
      </if>
      <if test="project != null" >
        #{project,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="io.openvidu.server.common.pojo.Department" >
    update sd_department
    <set >
      <if test="parentId != null" >
        parent_id = #{parentId,jdbcType=BIGINT},
      </if>
      <if test="deptName != null" >
        dept_name = #{deptName,jdbcType=VARCHAR},
      </if>
      <if test="corpId != null" >
        corp_id = #{corpId,jdbcType=BIGINT},
      </if>
      <if test="project != null" >
        project = #{project,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="io.openvidu.server.common.pojo.Department" >
    update sd_department
    set parent_id = #{parentId,jdbcType=BIGINT},
      dept_name = #{deptName,jdbcType=VARCHAR},
      corp_id = #{corpId,jdbcType=BIGINT},
      project = #{project,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>
