<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="io.openvidu.server.common.dao.AppointParticipantMapper" >
  <resultMap id="BaseResultMap" type="io.openvidu.server.common.pojo.AppointParticipant" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="ruid" property="ruid" jdbcType="VARCHAR" />
    <result column="user_id" property="userId" jdbcType="BIGINT" />
    <result column="uuid" property="uuid" jdbcType="VARCHAR" />
    <result column="status" property="status" jdbcType="TINYINT" />
    <result column="project" property="project" jdbcType="VARCHAR" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, ruid, user_id, uuid, status, project, create_time, update_time
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from sd_appoint_part
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from sd_appoint_part
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="io.openvidu.server.common.pojo.AppointParticipant" >
    insert into sd_appoint_part (id, ruid, user_id, 
      uuid, status, project, 
      create_time, update_time)
    values (#{id,jdbcType=BIGINT}, #{ruid,jdbcType=VARCHAR}, #{userId,jdbcType=BIGINT}, 
      #{uuid,jdbcType=VARCHAR}, #{status,jdbcType=TINYINT}, #{project,jdbcType=VARCHAR}, 
      #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="io.openvidu.server.common.pojo.AppointParticipant" >
    insert into sd_appoint_part
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="ruid != null" >
        ruid,
      </if>
      <if test="userId != null" >
        user_id,
      </if>
      <if test="uuid != null" >
        uuid,
      </if>
      <if test="status != null" >
        status,
      </if>
      <if test="project != null" >
        project,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="updateTime != null" >
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=BIGINT},
      </if>
      <if test="ruid != null" >
        #{ruid,jdbcType=VARCHAR},
      </if>
      <if test="userId != null" >
        #{userId,jdbcType=BIGINT},
      </if>
      <if test="uuid != null" >
        #{uuid,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        #{status,jdbcType=TINYINT},
      </if>
      <if test="project != null" >
        #{project,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="io.openvidu.server.common.pojo.AppointParticipant" >
    update sd_appoint_part
    <set >
      <if test="ruid != null" >
        ruid = #{ruid,jdbcType=VARCHAR},
      </if>
      <if test="userId != null" >
        user_id = #{userId,jdbcType=BIGINT},
      </if>
      <if test="uuid != null" >
        uuid = #{uuid,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=TINYINT},
      </if>
      <if test="project != null" >
        project = #{project,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="io.openvidu.server.common.pojo.AppointParticipant" >
    update sd_appoint_part
    set ruid = #{ruid,jdbcType=VARCHAR},
      user_id = #{userId,jdbcType=BIGINT},
      uuid = #{uuid,jdbcType=VARCHAR},
      status = #{status,jdbcType=TINYINT},
      project = #{project,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=BIGINT}
  </update>

  <insert id="batchInsert" parameterType="java.util.List" useGeneratedKeys="true" keyProperty="id">
    insert into sd_appoint_part (id, ruid, user_id,
    uuid, status, project, create_time)
    values
    <foreach collection="list" item="item" index="index" separator=",">
      ( #{item.id,jdbcType=BIGINT}, #{item.ruid,jdbcType=VARCHAR}, #{item.userId,jdbcType=BIGINT},
      #{item.uuid,jdbcType=VARCHAR}, #{item.status,jdbcType=TINYINT},
      #{item.project,jdbcType=VARCHAR}, #{item.createTime,jdbcType=TIMESTAMP})
    </foreach>
  </insert>

  <delete id="deleteByConferenceRuid" parameterType="java.lang.String">
    delete from sd_appoint_part where ruid = #{ruid,jdbcType=VARCHAR}
  </delete>

  <select id="selectByCondition" parameterType="io.openvidu.server.common.pojo.AppointParticipant" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from sd_appoint_part
    <where>
      <if test="ruid != null" >
        ruid = #{ruid,jdbcType=VARCHAR}
    </if>
      <if test="userId != null" >
        and user_id = #{userId,jdbcType=BIGINT}
      </if>
      <if test="status != null" >
        and status = #{status,jdbcType=TINYINT}
      </if>
      <if test="project != null" >
        and project = #{project,jdbcType=VARCHAR}
      </if>
    </where>
  </select>

  <select id="selectByRuids" parameterType="java.util.List" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from sd_appoint_part
    where ruid in
    <foreach collection="list" index="index" item="item" separator="," open="(" close=")">
      #{item,jdbcType=VARCHAR}
    </foreach>
  </select>

  <update id="endAppointStatusByRuids" parameterType="java.util.List">
    update sd_appoint_part set status = 1
    where ruid in
    <foreach collection="list" index="index" item="item" separator="," open="(" close=")">
      #{item,jdbcType=VARCHAR}
    </foreach>
  </update>
</mapper>