<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="io.openvidu.server.common.dao.CorporationMapper">
  <resultMap id="BaseResultMap" type="io.openvidu.server.common.pojo.Corporation">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="corp_name" jdbcType="VARCHAR" property="corpName" />
    <result column="project" jdbcType="VARCHAR" property="project" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="capacity" jdbcType="INTEGER" property="capacity" />
    <result column="recording_capacity" jdbcType="INTEGER" property="recordingCapacity" />
    <result column="activation_date" jdbcType="DATE" property="activationDate" />
    <result column="expire_date" jdbcType="DATE" property="expireDate" />
    <result column="recording_activation_date" jdbcType="DATE" property="recordingActivationDate" />
    <result column="recording_expire_date" jdbcType="DATE" property="recordingExpireDate" />
    <result column="remainder_duration" jdbcType="INTEGER" property="remainderDuration" />
  </resultMap>
  <sql id="Base_Column_List">
    id, corp_name, project, create_time, update_time, capacity, recording_capacity, activation_date, expire_date, remainder_duration,
    recording_activation_date, recording_expire_date
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from sd_corporation
    where id = #{id,jdbcType=BIGINT}
  </select>
  <select id="selectByCorpProject" parameterType="java.lang.String" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from sd_corporation
    where project = #{project,jdbcType=VARCHAR}
    limit 1
  </select>

  <select id="selectAllCorp"  resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from sd_corporation
  </select>

  <select id="listCorpExpire"  resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from sd_corporation
    where now() > expire_date
  </select>

  <select id="listByCorpRecordExpireDay" resultType="io.openvidu.server.common.pojo.Corporation">
    select
    <include refid="Base_Column_List" />
    from sd_corporation
    where #{expire} = recording_expire_date
  </select>

  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from sd_corporation
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="io.openvidu.server.common.pojo.Corporation">
    insert into sd_corporation (id, corp_name, project,
      create_time, update_time, activation_date, expire_date)
    values (#{id,jdbcType=BIGINT}, #{corpName,jdbcType=VARCHAR}, #{project,jdbcType=VARCHAR},
      #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}, #{activationDate,jdbcType=DATE}, #{expireDate,jdbcType=DATE})
  </insert>
  <insert id="insertSelective" parameterType="io.openvidu.server.common.pojo.Corporation">
    insert into sd_corporation
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="corpName != null">
        corp_name,
      </if>
      <if test="project != null">
        project,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="activationDate != null">
        activation_date,
      </if>
      <if test="expireDate != null">
        expire_date
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="corpName != null">
        #{corpName,jdbcType=VARCHAR},
      </if>
      <if test="project != null">
        #{project,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="activationDate != null">
        #{activationDate,jdbcType=DATE},
      </if>
      <if test="expireDate != null">
        #{expireDate,jdbcType=DATE},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="io.openvidu.server.common.pojo.Corporation">
    update sd_corporation
    <set>
      <if test="corpName != null">
        corp_name = #{corpName,jdbcType=VARCHAR},
      </if>
      <if test="project != null">
        project = #{project,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="activationDate != null">
        #{activationDate,jdbcType=DATE},
      </if>
      <if test="expireDate != null">
        #{expireDate,jdbcType=DATE},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="io.openvidu.server.common.pojo.Corporation">
    update sd_corporation
    set corp_name = #{corpName,jdbcType=VARCHAR},
      project = #{project,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      activation_date = #{activationDate,jdbcType=TIMESTAMP},
      expire_date = #{expireDate,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=BIGINT}
  </update>

  <update id="updateCorpRemainderDuration" parameterType="io.openvidu.server.common.pojo.Corporation">
    update sd_corporation
    set remainder_duration = #{remainderDuration,jdbcType=INTEGER}
    where project = #{project,jdbcType=VARCHAR}
  </update>

  <select id="getUserCorpInfo" parameterType="java.lang.String" resultType="io.openvidu.server.common.pojo.UserCorpInfo">
    select sc.project,sc.remainder_duration remainderDuration
    from sd_corporation sc
    inner join sd_user su
    on sc.project = su.project
    where su.uuid = #{uuid,jdbcType=VARCHAR}
  </select>

  <!-- 查询企业是否充值过并发方数 -->
  <select id="selectIsRechargeConcurrent" parameterType="java.lang.String" resultType="java.lang.Boolean">
        <![CDATA[select case when count(spc.id) >= 1
                 then 1
                 else 0
                 end isRechargeConcurrent
        from sd_prepaid_card spc
        LEFT JOIN sd_prepaid_package spp on spc.package_id = spp.id
        LEFT JOIN sd_corporation sc on spc.used_corp_id = sc.id
        LEFT JOIN sd_user su on spc.used_user_id = su.id
        WHERE sc.project = #{project} AND spp.package_type = 1 ]]>
    </select>

</mapper>
